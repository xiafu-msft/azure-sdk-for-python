# Stubs for azure.storage.blob._shared.avro.avro_io (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from ..avro import schema
from typing import Any, Optional

PY3: Any
logger: Any
STRUCT_FLOAT: Any
STRUCT_DOUBLE: Any

class SchemaResolutionException(schema.AvroException):
    def __init__(self, fail_msg: Any, writer_schema: Optional[Any] = ...) -> None: ...

class BinaryDecoder:
    def __init__(self, reader: Any) -> None: ...
    @property
    def reader(self): ...
    def read(self, n: Any): ...
    @staticmethod
    def read_null() -> None: ...
    def read_boolean(self): ...
    def read_int(self): ...
    def read_long(self): ...
    def read_float(self): ...
    def read_double(self): ...
    def read_bytes(self): ...
    def read_utf8(self): ...
    def skip_null(self) -> None: ...
    def skip_boolean(self) -> None: ...
    def skip_int(self) -> None: ...
    def skip_long(self) -> None: ...
    def skip_float(self) -> None: ...
    def skip_double(self) -> None: ...
    def skip_bytes(self) -> None: ...
    def skip_utf8(self) -> None: ...
    def skip(self, n: Any) -> None: ...

class DatumReader:
    def __init__(self, writer_schema: Optional[Any] = ...) -> None: ...
    def set_writer_schema(self, writer_schema: Any) -> None: ...
    writer_schema: Any = ...
    def read(self, decoder: Any): ...
    def read_data(self, writer_schema: Any, decoder: Any): ...
    def skip_data(self, writer_schema: Any, decoder: Any): ...
    @staticmethod
    def read_fixed(writer_schema: Any, decoder: Any): ...
    @staticmethod
    def skip_fixed(writer_schema: Any, decoder: Any): ...
    @staticmethod
    def read_enum(writer_schema: Any, decoder: Any): ...
    @staticmethod
    def skip_enum(decoder: Any): ...
    def read_array(self, writer_schema: Any, decoder: Any): ...
    def skip_array(self, writer_schema: Any, decoder: Any) -> None: ...
    def read_map(self, writer_schema: Any, decoder: Any): ...
    def skip_map(self, writer_schema: Any, decoder: Any) -> None: ...
    def read_union(self, writer_schema: Any, decoder: Any): ...
    def skip_union(self, writer_schema: Any, decoder: Any): ...
    def read_record(self, writer_schema: Any, decoder: Any): ...
    def skip_record(self, writer_schema: Any, decoder: Any) -> None: ...
