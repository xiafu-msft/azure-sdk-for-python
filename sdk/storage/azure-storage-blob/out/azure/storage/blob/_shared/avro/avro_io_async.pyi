# Stubs for azure.storage.blob._shared.avro.avro_io_async (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from ..avro import schema
from .avro_io import STRUCT_DOUBLE, STRUCT_FLOAT, SchemaResolutionException
from typing import Any, Optional

PY3: Any
logger: Any

class AsyncBinaryDecoder:
    def __init__(self, reader: Any) -> None: ...
    @property
    def reader(self): ...
    async def read(self, n: Any): ...
    @staticmethod
    def read_null() -> None: ...
    async def read_boolean(self): ...
    async def read_int(self): ...
    async def read_long(self): ...
    async def read_float(self): ...
    async def read_double(self): ...
    async def read_bytes(self): ...
    async def read_utf8(self): ...
    def skip_null(self) -> None: ...
    async def skip_boolean(self) -> None: ...
    async def skip_int(self) -> None: ...
    async def skip_long(self) -> None: ...
    async def skip_float(self) -> None: ...
    async def skip_double(self) -> None: ...
    async def skip_bytes(self) -> None: ...
    async def skip_utf8(self) -> None: ...
    async def skip(self, n: Any) -> None: ...

class AsyncDatumReader:
    def __init__(self, writer_schema: Optional[Any] = ...) -> None: ...
    def set_writer_schema(self, writer_schema: Any) -> None: ...
    writer_schema: Any = ...
    async def read(self, decoder: Any): ...
    async def read_data(self, writer_schema: Any, decoder: Any): ...
    async def skip_data(self, writer_schema: Any, decoder: Any): ...
    @staticmethod
    async def read_fixed(writer_schema: Any, decoder: Any): ...
    @staticmethod
    async def skip_fixed(writer_schema: Any, decoder: Any): ...
    @staticmethod
    async def read_enum(writer_schema: Any, decoder: Any): ...
    @staticmethod
    async def skip_enum(decoder: Any): ...
    async def read_array(self, writer_schema: Any, decoder: Any): ...
    async def skip_array(self, writer_schema: Any, decoder: Any) -> None: ...
    async def read_map(self, writer_schema: Any, decoder: Any): ...
    async def skip_map(self, writer_schema: Any, decoder: Any) -> None: ...
    async def read_union(self, writer_schema: Any, decoder: Any): ...
    async def skip_union(self, writer_schema: Any, decoder: Any): ...
    async def read_record(self, writer_schema: Any, decoder: Any): ...
    async def skip_record(self, writer_schema: Any, decoder: Any) -> None: ...
